#include <behaviors.dtsi>

#include <dt-bindings/zmk/bt.h>

#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define DOT 4
#define MED 5

&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        default_layer {

//             ---------------------------------------------------------------------------------------------------------------------------------
//             |  SUP/TAB    |  Q  |  W  |  E  |  R  |  T  |                                    |  Y  |  U  |  I  |  O  |  P  |  SUP/BACKSPACE|
//             |  SHIFT/ESC  |  A  |  S  |  D  |  F  |  G  |                                    |  H  |  J  |  K  |  L  |  ;  |  SHIFT/ENTER  |
//             |  CTRL/DELETE|  Z  |  X  |  C  |  V  |  B  |                                    |  N  |  M  |  ,  |  .  |  /  |  CTRL/DELETE  |
//                                          |LOWER|ALT/SPACE|RAISE|                        |RAISE|ALT/SPACE|LOWER|
            bindings = <
                &mt LGUI TAB    &kp Q  &kp W  &kp E  &kp R  &kp T                      &kp Y  &kp U  &kp I  &kp O  &kp P  &mt LGUI BSPC 
                &mt LSHIFT ESC  &kp A  &kp S  &kp D  &kp F  &kp G                      &kp H  &kp J  &kp K  &kp L  &kp SEMI  &mt LSHIFT RET
                &mt LCTRL DEL   &kp Z  &kp X  &kp C  &kp V  &kp B                      &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp FSLH  &mt LCTRL DEL
                                       &mo LWR   &mt LALT SPACE   &mo RSE        &mo RSE   &mt LALT SPACE   &mo LWR
            >;
        };
        raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
//                         |       |   {  |   }  |   ,  |   '  |   "  |                                       |   *  |  7   |   8  |   9  |   -  |     |
//                         |       |   !  |   @  |   #  |   $  |   %  |                                       |   /  |  4   |   5  |   6  |   0  |     |
//                         |       |   :  |   ^  |   ~  |   ?  |   &  |                                       |   .  |  1   |   2  |   3  |   +  |     |
            bindings = <
                &trans  &kp LBRC   &kp RBRC   &kp COMMA  &kp SQT    &kp DQT                            &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
                &trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                          &kp FSLH   &kp N4  &kp N5  &kp N6  &kp N0     &trans
                &trans  &kp COLON  &kp CARET  &kp TILDE  &kp QMARK  &kp AMPS                           &kp PERIOD &kp N1  &kp N2  &kp N3  &kp PLUS   &trans
                                                         &mo ADJ    &trans     &trans       &trans     &trans     &mo ADJ
            >;   
        };
        lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |         |  [  |   ]  |   ^  |   <  |   >  |         |                                       |         |PSCRN |  F7   |   F8  |   F9  |   _  |     |
// |MED_layer|  !  |   <- |   v  |   -> |   %  |         |                                       |         |   \  |  F4   |   F5  |   F6  | F10  |     |
// |         |  :  |   ^  | "|"  |  F11 |  F12 |ADJ_layer|                                       |ADJ_layer|   .  |  F1   |   F2  |   F3  |   =  |     |
//                                        |         |         |ADJ_LAYER|            |ADJ_LAYER|       |          |

            bindings = <
                &trans  &kp LBKT   &kp RBKT   &kp UP    &kp LT     &kp GT                     &kp PSCRN   &kp F7  &kp F8  &kp F9  &kp UNDER  &trans
                &mo MED &kp EXCL   &kp LEFT   &kp DOWN  &kp RIGHT  &kp PRCNT                  &kp BSLH    &kp F4  &kp F5  &kp F6  &kp F10    &trans
                &trans  &kp COLON  &kp CARET  &kp PIPE  &kp F11    &kp F12                    &kp PERIOD  &kp F1  &kp F2  &kp F3  &kp EQUAL  &trans
                                                     &trans    &trans     &mo ADJ         &mo ADJ     &trans     &trans
            >;
        };
        adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------------------------------------
// |       |bootloader|        |        |      |  DOTo  |                           |          |      |        |        |          |bootloader|      |
// |       |  BT_CLR  |BT_SEL 0|BT_SEL 1|BT_PRV| BT_NXT |                           | BT_NXT   |BT_PRV|BT_SEL 1|BT_SEL 0|  BT_CLR  |          |      |
// |  CAPS |sys_reset |        |        |      |        |                           |          |      |        |        |          | sys_reset| CAPS |
//                                 |         |BT_CLR_ALL|       |            |      |BT_CLR_ALL|          |

            bindings = <
                &trans   &bootloader  &none        &none         &none       &tog DOT                    &none       &none        &none        &none        &bootloader &trans
                &trans   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_PRV  &bt BT_NXT                  &bt BT_NXT  &bt BT_PRV   &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR  &trans
                &kp CAPS &sys_reset   &none        &none         &none       &none                       &none       &none        &none        &none        &sys_reset  &kp CAPS
                                                              &none &bt BT_CLR_ALL  &none           &none &bt BT_CLR_ALL &none 
            >;
        };
        doto_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | ESC  |  1   |   Q  |   W  |   E  |   R  |                                         |VOL_UP|     |     |     |     |     |
// | TAB  |  2   |   A  |   S  |   D  |   F  |                                         |VOL_DN|     |     |     |     |     |
// | CTRL |SHIFT |   Z  |   X  |   C  |   V  |                                         |      |     |     |     |     |     |
//                             | F24  | SPACE|  ALT |                           |DEF|DEF|DEF| 
            bindings = <
                &kp ESC    &kp N1      &kp Q   &kp W   &kp E    &kp R                          &kp C_VOL_UP    &none    &none    &none    &none    &none
                &kp TAB    &kp N2      &kp A   &kp S   &kp D    &kp F                          &kp C_VOL_DN    &none    &none    &none    &none    &none
                &kp LCTRL  &kp LSHIFT  &kp Z   &kp X   &kp C    &kp V                          &none           &none    &none    &none    &none    &none
                                                        &kp F24 &kp SPACE &kp LALT       &mo DEF &mo DEF &mo DEF
            >;
        };
        media_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
//             |      |      |      |VOL_UP| F24  |      |                         |      |      |      |      |      |     |
//             |      |      |MED_PR|VOL_DN|MED_NT|      |                         |      |      |      |      |      |     |
//             |      |      |      |PAUSE |      |      |                         |      |      |      |      |      |     |
//                                                |     |      |    |         |    |    |    |
            bindings = <
                &trans &trans &trans &kp C_VOL_UP &kp F24 &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &kp C_PREV &kp C_VOL_DN &kp C_NEXT &trans                        &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &kp C_PP &trans &trans                                    &trans &trans &trans &trans &trans &trans
                                               &trans &trans &trans               &trans &trans &trans
            >;
        };
    };
};
